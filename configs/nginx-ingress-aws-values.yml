# values for nginx-ingress on EKS using Network Load Balancer

rbac:
  create: true

controller:
  allowSnippetAnnotations: true
  admissionWebhooks:
    enabled: false
  config:
    ssl-redirect: "false"
    server-snippet: |
      listen 8000;
      if ( $server_port = 80 ) {
         return 308 https://$host$request_uri;
      }
    plugins: "lua_resty_mysql"
    main-snippet: |
      env MYSQL_HOST;
      env MYSQL_PORT;
      env MYSQL_DATABASE;
      env MYSQL_PASSWORD;
      env MYSQL_USER;
  containerPort:
    http: 80
    https: 443
    special: 8000
  opentelemetry:
    enabled: false
  extraVolumes:
    - name: lua-plugins
      emptyDir: { }
  extraInitContainers:
    - name: init-clone-lua-resty-mysql
      image: k8s.gcr.io/git-sync/git-sync:v3.1.7
      env:
        - name: GIT_SYNC_REPO
          value: "https://github.com/ir-engine/lua-resty-mysql"
        - name: GIT_SYNC_BRANCH
          value: "master"
        - name: GIT_SYNC_ROOT
          value: "/lua_plugins"
        - name: GIT_SYNC_DEST
          value: "custom"
        - name: GIT_SYNC_ONE_TIME
          value: "true"
        - name: GIT_SYNC_DEPTH
          value: "1"
      volumeMounts:
        - name: lua-plugins
          mountPath: /lua_plugins
  extraVolumeMounts:
    - name: lua-plugins
      mountPath: /etc/nginx/lua/plugins/lua_resty_mysql
      subPath: custom
  extraEnvs:
    - name: MYSQL_HOST
      value: "<MYSQL_HOST>"
    - name: MYSQL_PORT
      value: "<MYSQL_PORT>"
    - name: MYSQL_USER
      value: "<MYSQL_USER>"
    - name: MYSQL_PASSWORD
      value: "<MYSQL_PASSWORD>"
    - name: MYSQL_DATABASE
      value: "<MYSQL_DATABASE>"
  service:
    externalTrafficPolicy: Local
    targetPorts:
      http: http
      https: special # SSL termination at the load balancer
    annotations:
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: default
      service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "Name=ir-engine"
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "<ACM Certificate ARN for SSL>"
