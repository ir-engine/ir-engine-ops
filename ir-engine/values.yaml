# Default values for ir-engine.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

domain: ir-engine.dev
cloudProvider: aws 

# Utilized to set the project for the mySQL cloud auth proxy. 
# The value will be set by in the `ir-engine-builder` helm chart during 
# `deploy-ir-engine.yml` and `deploy-multi-tenancy.yml` helm upgrade steps. 
# The value will then be passed to the ir-engine helm chart during `deploy.sh` 
googleProjectID: ""

# This is used to define cluster environment type. Currently its used when deployed in local environment.
# For Minikube set this as "minikube"
# For Microk8s set this as "microk8s"
# For other environments keeps this as empty
clusterType: ""

client:
  enabled: true
  name: ir-engine-client

  replicaCount: 1
  image:
    repository: ir-engine/ir-engine-dev
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 3000

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: xrsocial.local
        paths: ["/"]

  serviceAccount:
    create: true
    annotations: {}
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  serveFromApi: false

  extraEnv:
    SITE_TITLE: Infinite Reality Engine
    SITE_DESC: Connected Worlds for Everyone
    APP_ENV: production

release:
  name: dev

api:
  enabled: true
  name: ir-engine-api

  replicaCount: 1
  image:
    repository: ir-engine/ir-engine-dev
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 3030

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: api.social.local
        paths: ["/"]

  serviceAccount:
    create: true
    annotations: {}
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  fileServer:
    hostUploadFolder: ""

  extraEnv:
    SMTP_HOST: ""
    SMTP_PORT: ""
    SMTP_USER: ""
    SMTP_PASS: ""
    GITHUB_CLIENT_ID: ""
    GITHUB_CLIENT_SECRET: ""
    GITHUB_CALLBACK_URL: http://127.0.0.1:3000/oauth/github
    FACEBOOK_CLIENT_ID: ""
    FACEBOOK_CLIENT_SECRET: ""
    FACEBOOK_CALLBACK_URL: http://127.0.0.1:3000/oauth/facebook
    GOOGLE_CLIENT_ID: ""
    GOOGLE_CLIENT_SECRET: ""
    GOOGLE_CALLBACK_URL: http://127.0.0.1:3000/oauth/google
    STORAGE_PROVIDER: local
    STORAGE_S3_BUCKET_NAME: ""
    STORAGE_S3_PUBLIC_VIDEO_PATH: "/"
    STORAGE_S3_PUBLIC_VIDEO_BUCKET: ""
    STORAGE_S3_REGION: ""
    STORAGE_S3_CLOUDFRONT_DOMAIN: ""
    STORAGE_AWS_ACCESS_KEY_ID: ""
    STORAGE_AWS_ACCESS_KEY_SECRET: ""
    AWS_SMS_REGION: ""
    AWS_SMS_ACCESS_KEY_ID: ""
    AWS_SMS_SECRET_ACCESS_KEY: ""
    AWS_SMS_TOPIC_ARN: ""
  
  autoscaling:
    enabled: true                        # Enable HPA (true = create HorizontalPodAutoscaler resource)
    minReplicas: 2                       # Minimum number of pods to run
    maxReplicas: 10                      # Maximum number of pods to run
    targetCPUUtilizationPercentage: 75  # Target CPU usage percentage to trigger autoscaling

media:
  enabled: true
  name: ir-engine-media

  replicaCount: 1
  image:
    repository: ir-engine/ir-engine-dev
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 3030

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: api.xrsocial.local
        paths: ["/video"]

  serviceAccount:
    create: true
    annotations: {}
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  extraEnv:
    SMTP_HOST: ""
    SMTP_PORT: ""
    SMTP_USER: ""
    SMTP_PASS: ""
    GITHUB_CLIENT_ID: ""
    GITHUB_CLIENT_SECRET: ""
    GITHUB_CALLBACK_URL: http://127.0.0.1:3000/oauth/github
    FACEBOOK_CLIENT_ID: ""
    FACEBOOK_CLIENT_SECRET: ""
    FACEBOOK_CALLBACK_URL: http://127.0.0.1:3000/oauth/facebook
    GOOGLE_CLIENT_ID: ""
    GOOGLE_CLIENT_SECRET: ""
    GOOGLE_CALLBACK_URL: http://127.0.0.1:3000/oauth/google
    STORAGE_PROVIDER: local
    STORAGE_S3_BUCKET_NAME: ""
    STORAGE_S3_PUBLIC_VIDEO_PATH: "/"
    STORAGE_S3_PUBLIC_VIDEO_BUCKET: ""
    STORAGE_S3_REGION: ""
    STORAGE_S3_CLOUDFRONT_DOMAIN: ""
    STORAGE_AWS_ACCESS_KEY_ID: ""
    STORAGE_AWS_ACCESS_KEY_SECRET: ""
    AWS_SMS_REGION: ""
    AWS_SMS_ACCESS_KEY_ID: ""
    AWS_SMS_SECRET_ACCESS_KEY: ""
    AWS_SMS_TOPIC_ARN: ""

instanceserver:
  enabled: true
  name: instanceserver

  replicaCount: 1
  image:
    repository: ir-engine/ir-engine-dev
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  service:
    type: ClusterIP
    port: 3031

  serviceAccount:
    create: true
    annotations: {}
    name:

sql:
  database: ir-engine
  user: server
  password: password
  host: host.minikube.internal
  port: 3304

agones:
  enabled: false

redis:
  enabled: false

taskserver:
  enabled: false
  name: ir-engine-taskserver

  replicaCount: 1
  image:
    repository: ir-engine/ir-engine-dev
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  service:
    type: ClusterIP
    port: 3030

  serviceAccount:
    create: true
    annotations: {}
    name:

batchinvalidator:
  enabled: false
  name: ir-engine-batchinvalidator

  replicaCount: 1
  image:
    repository: ir-engine/ir-engine-dev
    tag: latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

  serviceAccount:
    create: true
    annotations: {}
    name:


