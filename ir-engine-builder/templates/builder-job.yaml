{{- if (.Values.builder).enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "ir-engine.builder.fullname" . }}
  labels:
    {{- include "ir-engine.builder.labels" . | nindent 4 }}
spec:
  manualSelector: true
  selector:
    matchLabels:
      {{- include "ir-engine.builder.selectorLabels" . | nindent 6 }}
  backoffLimit: 3
  template:
    metadata:
      labels:
        {{- include "ir-engine.builder.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/builder-configmap.yaml") . | sha256sum }}
    spec:
      shareProcessNamespace: true
      {{- with .Values.builder.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: k8s-mysql-ksa
      securityContext:
        {{- toYaml .Values.builder.podSecurityContext | nindent 8 }}
      {{- $releaseName := .Release.Name }}
      {{ if not (empty .Values.release) }}
      {{- $releaseName = .Values.release.name | default .Release.Name }}
      {{ end }}
      restartPolicy: OnFailure
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.builder.securityContext | nindent 12 }}
          image: "{{ .Values.builder.image.repository }}:{{ .Values.builder.image.tag }}"
          imagePullPolicy: {{ .Values.builder.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "ir-engine.builder.fullname" . }}
                optional: true
          env:
            - name: KUBERNETES
              value: "true"
            {{ if .Values.client.serveFromApi }}
            - name: SERVE_CLIENT_FROM_API
              value: "true"
            {{ end }}
            {{ if .Values.sql }}
            - name: MYSQL_USER
              value: {{ .Values.sql.user }}
            - name: MYSQL_DATABASE
              value: {{ .Values.sql.database }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.sql.password | quote }}
            - name: MYSQL_HOST
              value: "127.0.0.1"
            - name: MYSQL_PORT
              value: {{ .Values.sql.port | quote }}
            {{ else }}
            - name: MYSQL_USER
              value: server
            - name: MYSQL_DATABASE
              value: ir-engine
            - name: MYSQL_PASSWORD
              value: password
            - name: MYSQL_HOST
              value: host.minikube.internal
            - name: MYSQL_PORT
              value: 3306
            {{ end }}
            - name: REDIS_ENABLED
              value: "true"
            - name: REDIS_ADDRESS
              value: "$({{ $releaseName | upper | replace "-" "_" }}_REDIS_MASTER_SERVICE_HOST)"
            - name: REDIS_PORT
              value: "$({{ $releaseName | upper | replace "-" "_" }}_REDIS_MASTER_SERVICE_PORT)"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $releaseName }}-redis
                  key: redis-password
            - name: RELEASE_NAME
              value: {{ $releaseName }}
            - name: DOCKER_HOST
              value: tcp://localhost:2376
            - name: DOCKER_TLS_VERIFY
              value: "1"
            - name: DESTINATION_REPO_PROVIDER
              value: "gcp"
            - name: GKE_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: TAG
              value: {{ .Values.builder.image.tag }}
          ports:
            - name: http
              containerPort: 3030
              protocol: TCP
#          livenessProbe:
#            exec:
#              command:
#                - cat
#                - ./builder-started.txt
#            initialDelaySeconds: 10
#            periodSeconds: 60
#          readinessProbe:
#            exec:
#              command:
#                - cat
#                - ./builder-started.txt
#            initialDelaySeconds: 10
#            periodSeconds: 60
          resources:
            {{- toYaml .Values.builder.resources | nindent 12 }}
          volumeMounts:
            - name: dind-storage
              mountPath: /var/lib/docker
        - name: dind
          image: docker:24.0-dind
          securityContext:
            privileged: true
          env:
            - name: DOCKER_TLS_CERTDIR
              value: /var/lib/docker/certs
          volumeMounts:
            - name: dind-storage
              mountPath: /var/lib/docker
      initContainers:
        - name: cloud-sql-proxy
          restartPolicy: Always
          # It is recommended to use the latest version of the Cloud SQL Auth Proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.14.1
          args:
            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            - "--private-ip"

            # Enable structured logging with LogEntry format:
            - "--structured-logs"

            # Replace DB_PORT with the port the proxy should listen on
            - "--port=3306"
            - "ir-engine-dev:us-central1:ir-engine-mysql-dev"

          securityContext:
            # The default Cloud SQL Auth Proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
          # You should use resource requests/limits as a best practice to prevent
          # pods from consuming too many resources and affecting the execution of
          # other pods. You should adjust the following values based on what your
          # application needs. For details, see
          # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
              memory: "2Gi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
              cpu: "1"

      volumes:
      - name: dind-storage
        emptyDir: {}
      {{- with .Values.builder.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.builder.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.builder.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-mysql-ksa
  namespace: {{ .Release.Namespace }}
  annotations:
    iam.gke.io/gcp-service-account: cloud-sql-admin@ir-engine-dev.iam.gserviceaccount.com
